{"version":3,"sources":["reportWebVitals.js","app/api/fake.api/professions.api.js","app/api/fake.api/user.api.js","app/api/index.js","app/components/quality.jsx","app/components/qualitiesList.jsx","app/components/userPage.jsx","app/components/pagination.jsx","app/components/groupList.jsx","app/components/searchStatus.jsx","app/components/bookmark.jsx","app/components/tableBody.jsx","app/components/tableHeader.jsx","app/components/table.jsx","app/components/usersTable.jsx","app/components/searchName.jsx","app/components/usersList.jsx","app/utils/paginate.js","app/layouts/users.jsx","app/components/textField.jsx","app/layouts/login.jsx","app/utils/validator.js","app/layouts/main.jsx","app/components/navBar.jsx","app/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","professionsObject","doctor","_id","name","waiter","physics","engineer","actor","cook","qualities","tedious","color","strange","buller","alcoholic","handsome","uncertain","users","profession","professions","completedMeetings","rate","bookmark","API","fetchAll","Promise","resolve","window","setTimeout","getById","id","find","user","Quality","className","QualitiesList","map","qual","UserPage","userId","history","useHistory","useState","setUser","useEffect","api","data","onClick","push","Pagination","itemsCount","pageSize","onPageChange","currentPage","pageCount","Math","ceil","pages","_","range","page","GroupList","items","valueProperty","contentProperty","onItemSelect","selectedItem","Array","isArray","item","role","Object","keys","defaultProps","SearchStatus","length","number","lastOne","Number","toString","slice","indexOf","renderPhrase","BookMark","status","rest","TableBody","columns","renderContent","column","component","get","path","TableHeader","onSort","selectedSort","renderSortArrow","currentPath","order","undefined","scope","Table","children","UserTable","onToggleBookMark","onDelete","to","delete","SearchName","searchName","onItemSearchName","type","defaultValue","value","placeholder","onChange","e","UsersList","setCurrentPage","setProfession","selectedProf","setSelectedProf","setSearchName","sortBy","setSortBy","setUsers","filteredUsers","filter","JSON","stringify","includes","getSearchItem","count","usersCrop","pageNumber","startIndex","splice","paginate","orderBy","target","newArray","pageIndex","Users","useParams","TextField","label","error","showPassword","setShowPassword","htmlFor","prevState","Login","email","password","setData","errors","setErrors","handleChange","validatorConfig","isRequired","message","isEmail","isCapitalSymbol","isContainDigit","min","validate","config","validateMethod","statusValidate","trim","test","fieldName","validator","isValid","onSubmit","preventDefault","console","log","disabled","Main","NavBar","aria-current","App","exact","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.621c2279.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","export const professionsObject = {\n    doctor: { _id: \"67rdca3eeb7f6fgeed471818\", name: \"Доктор\" },\n    waiter: { _id: \"67rdca3eeb7f6fgeed471820\", name: \"Официант\" },\n    physics: { _id: \"67rdca3eeb7f6fgeed471814\", name: \"Физик\" },\n    engineer: { _id: \"67rdca3eeb7f6fgeed471822\", name: \"Инженер\" },\n    actor: { _id: \"67rdca3eeb7f6fgeed471824\", name: \"Актер\" },\n    cook: { _id: \"67rdca3eeb7f6fgeed471829\", name: \"Повар\" }\n};\nexport const professions = [\n    { _id: \"67rdca3eeb7f6fgeed471818\", name: \"Доктор\" },\n    { _id: \"67rdca3eeb7f6fgeed471820\", name: \"Официант\" },\n    { _id: \"67rdca3eeb7f6fgeed471814\", name: \"Физик\" },\n    { _id: \"67rdca3eeb7f6fgeed471822\", name: \"Инженер\" },\n    { _id: \"67rdca3eeb7f6fgeed471824\", name: \"Актер\" },\n    { _id: \"67rdca3eeb7f6fgeed471829\", name: \"Повар\" }\n];\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(professionsObject);\n        }, 2000);\n    });\n\nexport default {\n    fetchAll\n};\n","import { professionsObject as professions } from \"./professions.api\";\nconst qualities = {\n    tedious: {\n        _id: \"67rdca3eeb7f6fgeed471198\",\n        name: \"Нудила\",\n        color: \"primary\"\n    },\n    strange: {\n        _id: \"67rdca3eeb7f6fgeed471100\",\n        name: \"Странный\",\n        color: \"secondary\"\n    },\n    buller: {\n        _id: \"67rdca3eeb7f6fgeed4711012\",\n        name: \"Троль\",\n        color: \"success\"\n    },\n    alcoholic: {\n        _id: \"67rdca3eeb7f6fgeed471101\",\n        name: \"Алкоголик\",\n        color: \"danger\"\n    },\n    handsome: {\n        _id: \"67rdca3eeb7f6fgeed471102\",\n        name: \"Красавчик\",\n        color: \"info\"\n    },\n    uncertain: {\n        _id: \"67rdca3eeb7f6fgeed471103\",\n        name: \"Неуверенный\",\n        color: \"dark\"\n    }\n};\n\nconst users = [\n    {\n        _id: \"67rdca3eeb7f6fgeed471815\",\n        name: \"Джон Дориан\",\n        profession: professions.doctor,\n        qualities: [qualities.tedious, qualities.uncertain, qualities.strange],\n        completedMeetings: 36,\n        rate: 2.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471816\",\n        name: \"Кокс\",\n        profession: professions.doctor,\n        qualities: [qualities.buller, qualities.handsome, qualities.alcoholic],\n        completedMeetings: 15,\n        rate: 2.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471817\",\n        name: \"Боб Келсо\",\n        profession: professions.doctor,\n        qualities: [qualities.buller],\n        completedMeetings: 247,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471818\",\n        name: \"Рэйчел Грин\",\n        profession: professions.waiter,\n        qualities: [qualities.uncertain],\n        completedMeetings: 148,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471819\",\n        name: \"Шелдон Купер\",\n        profession: professions.physics,\n        qualities: [qualities.strange, qualities.tedious],\n        completedMeetings: 37,\n        rate: 4.6,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471820\",\n        name: \"Леонард Хофстедтер\",\n        profession: professions.physics,\n        qualities: [qualities.strange, qualities.uncertain],\n        completedMeetings: 147,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471821\",\n        name: \"Говард Воловиц\",\n        profession: professions.engineer,\n        qualities: [qualities.strange, qualities.tedious],\n        completedMeetings: 72,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471822\",\n        name: \"Никола Тесла\",\n        profession: professions.engineer,\n        qualities: [qualities.handsome],\n        completedMeetings: 72,\n        rate: 5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471823\",\n        name: \"Моника Геллер\",\n        profession: professions.cook,\n        qualities: [qualities.strange, qualities.uncertain],\n        completedMeetings: 17,\n        rate: 4.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471824\",\n        name: \"Рататуй\",\n        profession: professions.cook,\n        qualities: [qualities.handsome, qualities.buller],\n        completedMeetings: 17,\n        rate: 4.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed47181f\",\n        name: \"Джоуи Триббиани\",\n        profession: professions.actor,\n        qualities: [qualities.uncertain, qualities.strange],\n        completedMeetings: 434,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed47181r\",\n        name: \"Брэд Питт\",\n        profession: professions.actor,\n        qualities: [qualities.handsome],\n        completedMeetings: 434,\n        rate: 5,\n        bookmark: false\n    }\n];\n\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(users);\n        }, 2000);\n    });\n\nconst getById = (id) =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(users.find((user) => user._id === id));\n        }, 1000);\n    });\nexport default {\n    fetchAll,\n    getById\n};\n","import users from \"./fake.api/user.api\";\nimport professions from \"./fake.api/professions.api\";\nconst API = {\n    users,\n    professions\n};\nexport default API;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst Quality = ({ color, name, _id }) => {\n    return (\n        <span className={\"badge m-1 bg-\" + color}>\n            {name}\n        </span>\n    );\n};\nQuality.propTypes = {\n    color: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    _id: PropTypes.string.isRequired\n};\n\nexport default Quality;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Quality from \"./quality\";\n\nconst QualitiesList = ({ qualities }) => {\n    return (\n        <>\n            {qualities.map((qual) => (\n                <Quality key={qual._id} {...qual} />\n            ))}\n        </>\n    );\n};\n\nQualitiesList.propTypes = {\n    qualities: PropTypes.array\n};\n\nexport default QualitiesList;\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport api from \"../api\";\nimport QualitiesList from \"./qualitiesList\";\nimport { useHistory } from \"react-router-dom\";\n\nconst UserPage = ({ userId }) => {\n    const history = useHistory();\n    const [user, setUser] = useState();\n    useEffect(() => {\n        api.users.getById(userId).then((data) => setUser(data));\n    });\n    const handleClick = () => {\n        history.push(\"/users\");\n    };\n    if (user) {\n        return (\n            <div>\n                <h1> {user.name}</h1>\n                <h2>Профессия: {user.profession.name}</h2>\n                <QualitiesList qualities={user.qualities} />\n                <p>completedMeetings: {user.completedMeetings}</p>\n                <h2>Rate: {user.rate}</h2>\n                <button onClick={handleClick}> Все Пользователи</button>\n            </div>\n        );\n    } else {\n        return <h1>Loading</h1>;\n    }\n};\n\nUserPage.propTypes = {\n    userId: PropTypes.string.isRequired\n};\n\nexport default UserPage;\n","import React from \"react\";\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\n\nconst Pagination = ({ itemsCount, pageSize, onPageChange, currentPage }) => {\n    const pageCount = Math.ceil(itemsCount / pageSize);\n    if (pageCount === 1) return null;\n    const pages = _.range(1, pageCount + 1);\n    return (\n        <nav>\n            <ul className=\"pagination\">\n                {pages.map((page) => (\n                    <li\n                        className={\n                            \"page-item\" +\n                            (page === currentPage ? \" active\" : \"\")\n                        }\n                        key={\"page_\" + page}\n                    >\n                        <button\n                            className=\"page-link\"\n                            onClick={() => onPageChange(page)}\n                        >\n                            {page}\n                        </button>\n                    </li>\n                ))}\n            </ul>\n        </nav>\n    );\n};\nPagination.propTypes = {\n    itemsCount: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired,\n    onPageChange: PropTypes.func.isRequired,\n    currentPage: PropTypes.number.isRequired\n};\n\nexport default Pagination;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst GroupList = ({\n    items,\n    valueProperty,\n    contentProperty,\n    onItemSelect,\n    selectedItem\n}) => {\n    if (!Array.isArray(items)) {\n        return (\n            <ul className=\"list-group\">\n                {Object.keys(items).map((item) => (\n                    <li\n                        key={items[item][valueProperty]}\n                        className={\n                            \"list-group-item\" +\n                            (items[item] === selectedItem ? \" active\" : \"\")\n                        }\n                        onClick={() => onItemSelect(items[item])}\n                        role=\"button\"\n                    >\n                        {items[item][contentProperty]}\n                    </li>\n                ))}\n            </ul>\n        );\n    }\n    return (\n        <ul className=\"list-group\">\n            {items.map((item) => (\n                <li\n                    key={item[valueProperty]}\n                    className={\n                        \"list-group-item\" +\n                        (item === selectedItem ? \" active\" : \"\")\n                    }\n                    onClick={() => onItemSelect(item)}\n                    role=\"button\"\n                >\n                    {item[contentProperty]}\n                </li>\n            ))}\n        </ul>\n    );\n};\nGroupList.defaultProps = {\n    valueProperty: \"_id\",\n    contentProperty: \"name\"\n};\nGroupList.propTypes = {\n    items: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    valueProperty: PropTypes.string.isRequired,\n    contentProperty: PropTypes.string.isRequired,\n    onItemSelect: PropTypes.func,\n    selectedItem: PropTypes.object\n};\n\nexport default GroupList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst SearchStatus = ({ length }) => {\n    const renderPhrase = (number) => {\n        const lastOne = Number(number.toString().slice(-1));\n        if (number > 4 && number < 15) {\n            return \"человек тусанет\";\n        }\n        if (lastOne === 1) return \"человек тусанет\";\n        if ([2, 3, 4].indexOf(lastOne) >= 0) return \"человека тусанут\";\n        return \"человек тусанет\";\n    };\n    return (\n        <h2>\n            <span\n                className={\"badge \" + (length > 0 ? \"bg-primary\" : \"bg-danger\")}\n            >\n                {length > 0\n                    ? `${length + \" \" + renderPhrase(length)}   с тобой сегодня`\n                    : \"Никто с тобой не тусанет\"}\n            </span>\n        </h2>\n    );\n};\nSearchStatus.propTypes = {\n    length: PropTypes.number\n};\n\nexport default SearchStatus;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst BookMark = ({ status, ...rest }) => {\n    return (\n        <button {...rest}>\n            <i className={\"bi bi-bookmark\" + (status ? \"-heart-fill\" : \"\")}></i>\n        </button>\n    );\n};\nBookMark.propTypes = {\n    status: PropTypes.bool\n};\n\nexport default BookMark;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nconst TableBody = ({ data, columns }) => {\n    const renderContent = (item, column) => {\n        if (columns[column].component) {\n            const component = columns[column].component;\n            if (typeof component === \"function\") {\n                return component(item);\n            }\n            return component;\n        }\n        return _.get(item, columns[column].path);\n    };\n    return (\n        <tbody>\n            {data.map((item) => (\n                <tr key={item._id}>\n                    {Object.keys(columns).map((column) => (\n                        <td key={column}>{renderContent(item, column)}</td>\n                    ))}\n                </tr>\n            ))}\n        </tbody>\n    );\n};\n\nTableBody.propTypes = {\n    data: PropTypes.array.isRequired,\n    columns: PropTypes.object.isRequired\n};\n\nexport default TableBody;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst TableHeader = ({ onSort, selectedSort, columns }) => {\n    const handleSort = (item) => {\n        if (selectedSort.path === item) {\n            onSort({\n                ...selectedSort,\n                order: selectedSort.order === \"asc\" ? \"desc\" : \"asc\"\n            });\n        } else {\n            onSort({ path: item, order: \"asc\" });\n        }\n    };\n    const renderSortArrow = (selectedSort, currentPath) => {\n        if (selectedSort.path === currentPath) {\n            if (selectedSort.order === \"asc\") {\n                return <i className=\"bi bi-caret-down-fill\"></i>;\n            } else {\n                return <i className=\"bi bi-caret-up-fill\"></i>;\n            }\n        }\n        return null;\n    };\n\n    return (\n        <thead>\n            <tr>\n                {Object.keys(columns).map((column) => (\n                    <th\n                        key={column}\n                        onClick={\n                            columns[column].path\n                                ? () => handleSort(columns[column].path)\n                                : undefined\n                        }\n                        {...{ role: columns[column].path && \"button\" }}\n                        scope=\"col\"\n                    >\n                        {columns[column].name}{\" \"}\n                        {renderSortArrow(selectedSort, columns[column].path)}\n                    </th>\n                ))}\n            </tr>\n        </thead>\n    );\n};\nTableHeader.propTypes = {\n    onSort: PropTypes.func.isRequired,\n    selectedSort: PropTypes.object.isRequired,\n    columns: PropTypes.object.isRequired\n};\n\nexport default TableHeader;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TableBody from \"./tableBody\";\nimport TableHeader from \"./tableHeader\";\n\nconst Table = ({ onSort, selectedSort, columns, data, children }) => {\n    return (\n        <table className=\"table\">\n            {children || (\n                <>\n                    <TableHeader {...{ onSort, selectedSort, columns }} />\n                    <TableBody {...{ columns, data }} />\n                </>\n            )}\n        </table>\n    );\n};\nTable.propTypes = {\n    onSort: PropTypes.func,\n    selectedSort: PropTypes.object,\n    columns: PropTypes.object,\n    data: PropTypes.array,\n    children: PropTypes.array\n};\n\nexport default Table;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport BookMark from \"./bookmark\";\nimport QualitiesList from \"./qualitiesList\";\nimport Table from \"./table\";\nimport { Link } from \"react-router-dom\";\n\nconst UserTable = ({\n    users,\n    onSort,\n    selectedSort,\n    onToggleBookMark,\n    onDelete,\n    ...rest\n}) => {\n    const columns = {\n        name: {\n            path: \"name\",\n            name: \"Имя\",\n            component: (user) => (\n                <Link to={`/users/${user._id}`}>{user.name}</Link>\n            )\n        },\n        qualities: {\n            name: \"Качества\",\n            component: (user) => <QualitiesList qualities={user.qualities} />\n        },\n        professions: { path: \"profession.name\", name: \"Профессия\" },\n        completedMeetings: {\n            path: \"completedMeetings\",\n            name: \"Встретился, раз\"\n        },\n        rate: { path: \"rate\", name: \"Оценка\" },\n        bookmark: {\n            path: \"bookmark\",\n            name: \"Избранное\",\n            component: (user) => (\n                <BookMark\n                    status={user.bookmark}\n                    onClick={() => onToggleBookMark(user._id)}\n                />\n            )\n        },\n        delete: {\n            component: (user) => (\n                <button\n                    onClick={() => onDelete(user._id)}\n                    className=\"btn btn-danger\"\n                >\n                    delete\n                </button>\n            )\n        }\n    };\n    return (\n        <Table\n            onSort={onSort}\n            selectedSort={selectedSort}\n            columns={columns}\n            data={users}\n        />\n    );\n};\n\nUserTable.propTypes = {\n    users: PropTypes.array.isRequired,\n    onSort: PropTypes.func.isRequired,\n    selectedSort: PropTypes.object.isRequired,\n    onToggleBookMark: PropTypes.func.isRequired,\n    onDelete: PropTypes.func.isRequired\n};\n\nexport default UserTable;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst SearchName = ({ searchName, onItemSearchName }) => {\n    return (\n        <>\n            <div className=\"container mt-4 pb-4\">\n                <form className=\"row g-3\">\n                    <input\n                        type=\"text\"\n                        defaultValue=\"search\"\n                        value={searchName}\n                        placeholder=\"Search...\"\n                        onChange={(e) => onItemSearchName(e)}\n                    />\n                </form>\n            </div>\n        </>\n    );\n};\nSearchName.propTypes = {\n    searchName: PropTypes.string.isRequired,\n    onItemSearchName: PropTypes.func\n};\n\nexport default SearchName;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { paginate } from \"../utils/paginate\";\nimport Pagination from \"./pagination\";\nimport api from \"../api\";\nimport GroupList from \"./groupList\";\nimport SearchStatus from \"./searchStatus\";\nimport UserTable from \"./usersTable\";\nimport SearchName from \"./searchName\";\nimport _ from \"lodash\";\nconst UsersList = () => {\n    const [currentPage, setCurrentPage] = useState(1);\n    const [professions, setProfession] = useState();\n    const [selectedProf, setSelectedProf] = useState();\n    const [searchName, setSearchName] = useState(\"\");\n    const [sortBy, setSortBy] = useState({ path: \"name\", order: \"asc\" });\n    const pageSize = 8;\n\n    const [users, setUsers] = useState();\n    useEffect(() => {\n        api.users.fetchAll().then((data) => setUsers(data));\n    }, []);\n    const handleDelete = (userId) => {\n        setUsers(users.filter((user) => user._id !== userId));\n    };\n    const handleToggleBookMark = (id) => {\n        const newArray = users.map((user) => {\n            if (user._id === id) {\n                return { ...user, bookmark: !user.bookmark };\n            }\n            return user;\n        });\n        setUsers(newArray);\n    };\n\n    useEffect(() => {\n        api.professions.fetchAll().then((data) => setProfession(data));\n    }, []);\n\n    useEffect(() => {\n        setCurrentPage(1);\n    }, [selectedProf]);\n\n    const handleProfessionSelect = (item) => {\n        setSearchName(\"\");\n        setSelectedProf(item);\n    };\n\n    const handlePageChange = (pageIndex) => {\n        setCurrentPage(pageIndex);\n    };\n    const handleSort = (item) => {\n        setSortBy(item);\n    };\n    const handleItemSearchName = (item) => {\n        setSelectedProf();\n        setSearchName(item.target.value);\n    };\n    function getSearchItem(users) {\n        if (selectedProf) {\n            return users.filter(\n                (user) =>\n                    JSON.stringify(user.profession) ===\n                    JSON.stringify(selectedProf)\n            );\n        }\n        if (searchName) {\n            return users.filter((user) => user.name.includes(searchName));\n        }\n        return users;\n    }\n    if (users) {\n        const filteredUsers = getSearchItem(users);\n        const count = filteredUsers.length;\n        const sortedUsers = _.orderBy(\n            filteredUsers,\n            [sortBy.path],\n            [sortBy.order]\n        );\n        const usersCrop = paginate(sortedUsers, currentPage, pageSize);\n        const clearFilter = () => {\n            setSelectedProf();\n        };\n        return (\n            <div className=\"d-flex\">\n                {professions && (\n                    <div className=\"d-flex flex-column flex-shrink-0 p-3\">\n                        <GroupList\n                            selectedItem={selectedProf}\n                            items={professions}\n                            onItemSelect={handleProfessionSelect}\n                        />\n                        <button\n                            className=\"btn btn-secondary mt-2\"\n                            onClick={clearFilter}\n                        >\n                            {\" \"}\n                            Очистить\n                        </button>\n                    </div>\n                )}\n                <div className=\"d-flex flex-column\">\n                    <SearchName\n                        searchName={searchName}\n                        onItemSearchName={handleItemSearchName}\n                    />\n                    <SearchStatus length={count} />\n                    {count > 0 && (\n                        <UserTable\n                            users={usersCrop}\n                            onSort={handleSort}\n                            selectedSort={sortBy}\n                            onDelete={handleDelete}\n                            onToggleBookMark={handleToggleBookMark}\n                        />\n                    )}\n                    <div className=\"d-flex justify-content-center\">\n                        <Pagination\n                            itemsCount={count}\n                            pageSize={pageSize}\n                            currentPage={currentPage}\n                            onPageChange={handlePageChange}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    return \"loading...\";\n};\nUsersList.propTypes = {\n    users: PropTypes.array\n};\n\nexport default UsersList;\n","export function paginate(items, pageNumber, pageSize) {\n    const startIndex = (pageNumber - 1) * pageSize;\n    return [...items].splice(startIndex, pageSize);\n}\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport UserPage from \"../components/userPage\";\nimport UsersList from \"../components/usersList\";\nconst Users = () => {\n    const params = useParams();\n    const { userId } = params;\n    return <>{userId ? <UserPage userId={userId} /> : <UsersList />}</>;\n};\n\nexport default Users;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction TextField({ label, type, name, value, onChange, error }) {\n    const [showPassword, setShowPassword] = useState(false);\n    const getInputClasses = () => {\n        return \"form-control\" + (error ? \" is-invalid\" : \"\");\n    };\n    const toggleShowPassword = () => {\n        setShowPassword((prevState) => !prevState);\n    };\n    return (\n        <div className=\"mb-4\">\n            <label htmlFor={name}>{label}</label>\n            <div className=\"input-group has-validation\">\n                <input\n                    type={showPassword ? \"text\" : type}\n                    id={name}\n                    name={name}\n                    value={value}\n                    onChange={onChange}\n                    className={getInputClasses()}\n                />\n                {type === \"password\" && (\n                    <button\n                        className=\"btn btn-outline-secondary\"\n                        type=\"button\"\n                        onClick={toggleShowPassword}\n                    >\n                        <i\n                            className={\n                                \"bi bi-eye\" + (showPassword ? \"-slash\" : \"\")\n                            }\n                        ></i>\n                    </button>\n                )}\n                {error && <div className=\"invalid-feedback\">{error}</div>}\n            </div>\n        </div>\n    );\n}\nTextField.defaultProps = {\n    type: \"text\"\n};\nTextField.propTypes = {\n    label: PropTypes.string,\n    type: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    error: PropTypes.string\n};\n\nexport default TextField;\n","import React, { useEffect, useState } from \"react\";\nimport TextField from \"../components/textField\";\nimport { validator } from \"../utils/validator\";\n\nconst Login = () => {\n    const [data, setData] = useState({ email: \"\", password: \"\" });\n    const [errors, setErrors] = useState({});\n    const handleChange = ({ target }) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validatorConfig = {\n        email: {\n            isRequired: {\n                message: \"Электронная почта обязательна для заполнения\"\n            },\n            isEmail: {\n                message: \"Email введен некорректно\"\n            }\n        },\n        password: {\n            isRequired: {\n                message: \"Пароль обязателен для заполнения\"\n            },\n            isCapitalSymbol: {\n                message: \"Пароль должен содержать хотя бы одну заглавную букву\"\n            },\n            isContainDigit: {\n                message: \"Пароль должен содержать хотя бы одно число\"\n            },\n            min: {\n                message: \"Пароль должен состоять минимум из 8 символов\",\n                value: 8\n            }\n        }\n    };\n    useEffect(() => {\n        validate();\n    }, [data]);\n    const validate = () => {\n        const errors = validator(data, validatorConfig);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const isValid = Object.keys(errors).length === 0;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        console.log(data);\n    };\n    return (\n        <div className=\"container mt-5\">\n            <div className=\"row\">\n                <div className=\"col-md-6 offset-md-3 shadow p-4\">\n                    <h3 className=\"mb-4\">Login</h3>\n                    <form onSubmit={handleSubmit}>\n                        <TextField\n                            label=\"Электронная почта\"\n                            name=\"email\"\n                            value={data.email}\n                            onChange={handleChange}\n                            error={errors.email}\n                        />\n                        <TextField\n                            label=\"Пароль\"\n                            type=\"password\"\n                            name=\"password\"\n                            value={data.password}\n                            onChange={handleChange}\n                            error={errors.password}\n                        />\n                        <button\n                            className=\"btn btn-primary w-100 mx-auto\"\n                            type=\"submit\"\n                            disabled={!isValid}\n                        >\n                            Submit\n                        </button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Login;\n","export function validator(data, config) {\n    const errors = {};\n    function validate(validateMethod, data, config) {\n        let statusValidate;\n        switch (validateMethod) {\n            case \"isRequired\":\n                statusValidate = data.trim() === \"\";\n                break;\n            case \"isEmail\": {\n                const emailRegExp = /^\\S+@\\S+\\.\\S+$/g;\n                statusValidate = !emailRegExp.test(data);\n                break;\n            }\n            case \"isCapitalSymbol\": {\n                const capitalRegExp = /[A-Z]+/g;\n                statusValidate = !capitalRegExp.test(data);\n                break;\n            }\n            case \"isContainDigit\": {\n                const digitRegExp = /\\d+/g;\n                statusValidate = !digitRegExp.test(data);\n                break;\n            }\n            case \"min\": {\n                statusValidate = data.length < config.value;\n                break;\n            }\n            default:\n                break;\n        }\n        if (statusValidate) return config.message;\n    }\n    for (const fieldName in data) {\n        for (const validateMethod in config[fieldName]) {\n            const error = validate(\n                validateMethod,\n                data[fieldName],\n                config[fieldName][validateMethod]\n            );\n            if (error && !errors[fieldName]) {\n                errors[fieldName] = error;\n            }\n        }\n    }\n    return errors;\n}\n","import React from \"react\";\n\nconst Main = () => {\n    return <h1> Main Page</h1>;\n};\n\nexport default Main;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nconst NavBar = () => {\n    return (\n        <ul className=\"nav\">\n            <li className=\"nav-item\">\n                <Link className=\"nav-link \" aria-current=\"page\" to=\"/\">\n                    Main\n                </Link>\n            </li>\n            <li className=\"nav-item\">\n                <Link className=\"nav-link \" aria-current=\"page\" to=\"/login\">\n                    Login\n                </Link>\n            </li>\n            <li className=\"nav-item\">\n                <Link className=\"nav-link \" aria-current=\"page\" to=\"/users\">\n                    Users\n                </Link>\n            </li>\n        </ul>\n    );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\nimport Users from \"./layouts/users\";\nimport Login from \"./layouts/login\";\nimport Main from \"./layouts/main\";\nimport NavBar from \"./components/navBar\";\n\nfunction App() {\n    return (\n        <div>\n            <NavBar />\n            <Switch>\n                <Route path=\"/users/:userId?\" component={Users} />\n                <Route path=\"/login\" component={Login} />\n                <Route path=\"/\" exact component={Main} />\n                <Redirect to=\"/\" />\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./app/App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n    <BrowserRouter>\n        <React.StrictMode>\n            <App />\n        </React.StrictMode>\n    </BrowserRouter>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}